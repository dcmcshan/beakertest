{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "smartHTMLMode"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            },
            "languageVersion": "ES2015"
        },
        {
            "name": "Clojure",
            "plugin": "Clojure",
            "imports": "com.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.NamespaceClient\norg.joda.time.ReadablePartial\norg.joda.time.ReadableDateTime\norg.joda.time.ReadablePeriod\norg.joda.time.DateTime\norg.joda.time.DateMidnight\norg.joda.time.YearMonth\norg.joda.time.LocalDate\norg.joda.time.LocalTime\norg.joda.time.DateTimeZone\norg.joda.time.Period\norg.joda.time.PeriodType\norg.joda.time.Interval\norg.joda.time.Years\norg.joda.time.LocalDateTime\norg.joda.time.Chronology\norg.joda.time.format.DateTimeFormat\norg.joda.time.format.DateTimeFormatter\norg.joda.time.format.DateTimePrinter\norg.joda.time.format.DateTimeFormatterBuilder\norg.joda.time.format.DateTimeParser\norg.joda.time.format.ISODateTimeFormat\norg.joda.time.tz.FixedDateTimeZone",
            "view": {
                "cm": {
                    "mode": "text/x-clojure"
                }
            },
            "classPath": "/Users/dcmcshan/Documents/KaBOB/beakertest/target/beakertest-0.1.0-SNAPSHOT-standalone.jar",
            "requirements": "clj-time.format\nclj-time.coerce\nbeakertest.core"
        }
    ],
    "cells": [
        {
            "id": "codeD4eit5",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(beakertest.core/foo 1)"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": [
                        "java.lang.ClassNotFoundException: beakertest.core",
                        "\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)",
                        "\tat clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:69)",
                        "\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)",
                        "\tat clojure.lang.DynamicClassLoader.loadClass(DynamicClassLoader.java:77)",
                        "\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)",
                        "\tat java.lang.Class.forName0(Native Method)",
                        "\tat java.lang.Class.forName(Class.java:348)",
                        "\tat clojure.lang.RT.classForName(RT.java:2154)",
                        "\tat clojure.lang.RT.classForName(RT.java:2163)",
                        "\tat clojure.lang.Compiler$HostExpr.maybeClass(Compiler.java:1017)",
                        "\tat clojure.lang.Compiler$HostExpr.access$600(Compiler.java:795)",
                        "\tat clojure.lang.Compiler.macroexpand1(Compiler.java:6662)",
                        "\tat clojure.lang.Compiler.macroexpand(Compiler.java:6692)",
                        "\tat clojure.lang.Compiler.eval(Compiler.java:6766)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7227)",
                        "\tat clojure.lang.Compiler.load(Compiler.java:7174)",
                        "\tat clojure.core$load_reader.invoke(core.clj:3933)",
                        "\tat clojure.core$load_string.invoke(core.clj:3943)",
                        "\tat beaker_clojure_shell_4ca0c52b_70a7_4b77_b3d3_38e496e2ee33$run_str_4ca0c52b_70a7_4b77_b3d3_38e496e2ee33.invoke(Unknown Source)",
                        "\tat clojure.lang.Var.invoke(Var.java:379)",
                        "\tat com.twosigma.beaker.clojure.util.ClojureEvaluator$workerThread$MyRunnable.run(ClojureEvaluator.java:239)",
                        "\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)",
                        "\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "\tat java.lang.Thread.run(Thread.java:745)",
                        ""
                    ]
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Clojure",
                "shellId": "4ca0c52b-70a7-4b77-b3d3-38e496e2ee33",
                "elapsedTime": 193,
                "height": 52
            },
            "evaluatorReader": true,
            "lineCount": 1,
            "isError": true
        },
        {
            "id": "codeZlNvNT",
            "type": "code",
            "evaluator": "Clojure",
            "input": {
                "body": [
                    "(println (seq (.getURLs (java.lang.ClassLoader/getSystemClassLoader))))"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Error",
                    "object": "Evaluation cancelled due to a failure of an earlier cell evaluation"
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "Clojure",
                "shellId": "26122f66-d91a-4aab-b563-3ef72b786547",
                "elapsedTime": 141,
                "height": 47
            },
            "evaluatorReader": true,
            "lineCount": 1,
            "isError": true
        }
    ],
    "namespace": {}
}
